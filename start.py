#!/usr/bin/env python3
"""
Script de inicializa√ß√£o para o deploy no Render
Inicializa o banco de dados antes de iniciar o servidor
"""
import asyncio
import os
import sys
from dotenv import load_dotenv
from db import create_table_if_not_exists

async def init_app():
    """Inicializa a aplica√ß√£o"""
    print("üöÄ Inicializando FastScanNutri API...")
    
    # Carrega vari√°veis de ambiente
    load_dotenv()
    
    # Verifica se as vari√°veis essenciais est√£o configuradas
    gemini_api_key = os.getenv("GEMINI_API_KEY")
    database_url = os.getenv("DATABASE_URL")
    
    if not gemini_api_key:
        print("‚ùå GEMINI_API_KEY n√£o configurada")
        sys.exit(1)
        
    if not database_url:
        print("‚ùå DATABASE_URL n√£o configurada")
        sys.exit(1)
    
    print("‚úÖ Vari√°veis de ambiente configuradas")
    
    # Inicializa o banco de dados
    try:
        await create_table_if_not_exists()
        print("‚úÖ Banco de dados inicializado")
    except Exception as e:
        print(f"‚ùå Erro ao inicializar banco de dados: {e}")
        sys.exit(1)
    
    print("üéâ FastScanNutri API inicializada com sucesso!")

if __name__ == "__main__":
    asyncio.run(init_app())
